service: aws-lambda-backend
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  environment:
    DYNAMODB_CUSTOMER_TABLE: ${self:service}-customerTable-${sls:stage}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'dynamodb:PutItem'
        - 'dynamodb:Get*'
        - 'dynamodb:Scan*'
        - 'dynamodb:UpdateItem'
        - 'dynamodb:DeleteItem'
      Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-customerTable-${sls:stage}

functions:
  createCustomer:
    handler: src/createCustomer.createCustomer
    events:
      - http:
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: !Ref ApiGatewayAuthorizer
            scopes:
              - email
          method: post
          path: /

  getCustomers:
    handler: src/getCustomer.getCustomers
    events:
      - http:
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId: !Ref ApiGatewayAuthorizer
            scopes:
              - email
          method: get
          path: /

resources:
  - Resources:
      CustomerTable: 
        Type: AWS::DynamoDB::Table
        Properties: 
          AttributeDefinitions:
            - AttributeName: primary_key
              AttributeType: S
          BillingMode: PAY_PER_REQUEST
          KeySchema:
            - AttributeName: primary_key
              KeyType: HASH
          TableName: ${self:service}-customerTable-${sls:stage}
      ApiGatewayAuthorizer:
          Type: AWS::ApiGateway::Authorizer
          Properties:
            AuthorizerResultTtlInSeconds: 300
            IdentitySource: method.request.header.Authorization
            RestApiId: !Ref ApiGatewayRestApi
            Type: COGNITO_USER_POOLS
            Name: 'test-authorizer'
            ProviderARNs:
              - !Join [
                  '',
                  [!Sub 'arn:${AWS::Partition}:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/', !Ref UserPool],
                ]

  - ${file(cloudformation/cognito.yaml)}
